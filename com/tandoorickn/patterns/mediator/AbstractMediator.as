package com.tandoorickn.patterns.mediator{	import org.puremvc.as3.interfaces.*;	import com.tandoorickn.patterns.observer.*;		public class AbstractMediator extends AbstractNotifier implements IMediator, INotifier	{		public static const NAME:String = 'Mediator';				protected var mediatorName:String;		protected var viewComponent:Object;					public function AbstractMediator( mediatorName:String=null, viewComponent:Object=null ) {			this.mediatorName = (mediatorName != null)?mediatorName:NAME; 			this.viewComponent = viewComponent;			}		public function getMediatorName():String 		{				return mediatorName;		}		public function setViewComponent( viewComponent:Object ):void 		{			this.viewComponent = viewComponent;		}				public function getViewComponent():Object		{				return viewComponent;		}		public function listNotificationInterests():Array 		{			return [ ];		}		public function handleNotification( notification:INotification ):void {}				public function onRegister( ):void {}		public function onRemove( ):void {}	}}