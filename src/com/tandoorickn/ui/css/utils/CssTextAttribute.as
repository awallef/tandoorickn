package  com.tandoorickn.ui.css.utils{	import com.tandoorickn.ui.css.core.CoreCssTextSprite;		public class CssTextAttribute {		public static function setAttribute(cssSprite:CoreCssTextSprite):void		{			// GENERAL TEXTFIELD			cssSprite.textField.multiline 				= cssSprite.style.multiline;			//cssSprite.textField.background				= cssSprite.style.background;			cssSprite.textField.alpha 					= cssSprite.style.textAlpha;			cssSprite.textField.border 					= cssSprite.style.textBorder;			cssSprite.textField.type 					= cssSprite.style.type;			cssSprite.textField.wordWrap 				= cssSprite.style.wordWrap;			cssSprite.textField.displayAsPassword 		= cssSprite.style.displayAsPassword;			cssSprite.textField.selectable 				= cssSprite.style.selectable;			cssSprite.textField.maxChars				= cssSprite.style.maxChars;						// CONDITION FORMAT			if(cssSprite.style.font != null)			{				cssSprite.textFormat.font 				= cssSprite.style.font.fontName				cssSprite.textField.embedFonts 			= cssSprite.style.embedFonts = true;			}else{				cssSprite.textField.embedFonts 			= cssSprite.style.embedFonts = false;			}						// GENERAL TEXTFORMAT			//trace("cssSprite.style.color",cssSprite.style.color);			cssSprite.textFormat.color					= cssSprite.style.color;			cssSprite.textFormat.size					= cssSprite.style.size;			//trace("cssSprite.textFormat.color",cssSprite.textFormat.color);			cssSprite.textFormat.align					= cssSprite.style.align;			cssSprite.textFormat.bold					= cssSprite.style.bold;			cssSprite.textFormat.italic					= cssSprite.style.italic;			cssSprite.textFormat.underline				= cssSprite.style.underline;			cssSprite.textFormat.color					= cssSprite.style.color;			cssSprite.textFormat.color					= cssSprite.style.color;						// CONDITION MOUSE OPTIONS			if(cssSprite.style.mouseEnable && cssSprite.style.selectable)			{				cssSprite.textField.selectable 			= cssSprite.style.selectable;			}							if(!cssSprite.style.mouseEnable && cssSprite.style.selectable)			{				cssSprite.textField.selectable 			= cssSprite.style.selectable;				cssSprite.mouseEnabled = cssSprite.style.mouseEnable = true;			}						if(cssSprite.style.buttonMode)			{				cssSprite.textField.selectable = cssSprite.style.selectable = false;				cssSprite.textField.mouseEnabled = false;			}						cssSprite.textField.defaultTextFormat = cssSprite.textFormat;						var t:String;			if(cssSprite.isHtml){								t = cssSprite.html;				cssSprite.html = "";				cssSprite.html = t;							}else{								t = cssSprite.text;				cssSprite.text = "";				cssSprite.text = t;			}		}	}	}